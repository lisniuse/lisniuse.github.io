(function(){var content=[{"context":[{"title":"介绍","link":"/index.html"}],"content":"<html><head></head><body><h1 id=\"介绍\"><a href=\"#介绍\" class=\"header-anchor\">#</a>介绍</h1>\n<h2 id=\"什么是Teadocs？\"><a href=\"#什么是Teadocs？\" class=\"header-anchor\">#</a>什么是Teadocs？</h2>\n<p>Teadocs 是一款能够帮你快速构建html文档的工具，它基于nodejs编写。你可以用它记录学习笔记、记录文章、编写书籍、编写API文档，甚至可以用来写博客。</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"header-anchor\">#</a>原理</h2>\n<p>Teadocs 会自动根据你编写的markdown文档自动生成html文档，并且生成的html文档具备可复用、可移植等特性，可以部署在任何你喜欢的地方。</p>\n<h2 id=\"贡献\"><a href=\"#贡献\" class=\"header-anchor\">#</a>贡献</h2>\n<p>如果你想贡献代码，我们建议你先fork阅读Teadocs的源码，然后push你的idea，再由作者决定是否合并你的贡献。</p>\n</body></html>"},{"context":[{"title":"快速入门","link":"/quick_start.html"}],"content":"<html><head></head><body><h1 id=\"快速入门\"><a href=\"#快速入门\" class=\"header-anchor\">#</a>快速入门</h1>\n<h2 id=\"installation\"><a href=\"#installation\" class=\"header-anchor\">#</a>installation</h2>\n<p>Prerequisites: Nodejs(>=8.0), npm version 3+.</p>\n<pre><code>$ npm install -g teadocs</code></pre><h2 id=\"usage\"><a href=\"#usage\" class=\"header-anchor\">#</a>usage</h2>\n<h3 id=\"step-1\"><a href=\"#step-1\" class=\"header-anchor\">#</a>step 1</h3>\n<p>Create a new folder</p>\n<pre><code>$ mkdir mydocs</code></pre><h3 id=\"step2\"><a href=\"#step2\" class=\"header-anchor\">#</a>step2</h3>\n<p>Go to this folder</p>\n<pre><code>$ cd mydocs</code></pre><h3 id=\"step4\"><a href=\"#step4\" class=\"header-anchor\">#</a>step4</h3>\n<p>The command pulls the template from default docs, and generates the project at  <code>./mydocs</code></p>\n<pre><code>$ teadocs init</code></pre><h3 id=\"step5\"><a href=\"#step5\" class=\"header-anchor\">#</a>step5</h3>\n<p>If you want to be lazy, you can run this command again. This command will automatically generate the relevant <code>markdown file</code> from <code>tree.html</code>.</p>\n<pre><code>$ teadocs init</code></pre><h2 id=\"build-docs\"><a href=\"#build-docs\" class=\"header-anchor\">#</a>build docs</h2>\n<p>Build from <code>./mydocs</code></p>\n<pre><code>$ teadocs build</code></pre><h2 id=\"local-preview\"><a href=\"#local-preview\" class=\"header-anchor\">#</a>local preview</h2>\n<p>if you need a simple web server for previewing:</p>\n<pre><code>$ teadocs serve</code></pre><p>it will create a web server as the root in your configured build directory.</p>\n</body></html>"},{"context":[{"title":"安装","link":"/install.html"}],"content":"<html><head></head><body><h1 id=\"安装\"><a href=\"#安装\" class=\"header-anchor\">#</a>安装</h1>\n<h2 id=\"installation\"><a href=\"#installation\" class=\"header-anchor\">#</a>installation</h2>\n<p>Prerequisites: Nodejs(>=8.0), npm version 3+.</p>\n<pre><code>$ npm install -g teadocs</code></pre></body></html>"},{"context":[{"title":"配置介绍","link":"javascript:void(0)"},{"title":"文档目录结构介绍","link":"/config/structure.html"}],"content":"<html><head></head><body><h1 id=\"文档目录结构介绍\"><a href=\"#文档目录结构介绍\" class=\"header-anchor\">#</a>文档目录结构介绍</h1>\n<pre><code>testdocs\n├─ build # This is the directory where the generated document is located.\n│    ├─ config\n│    │    ├─ main.html\n│    │    ├─ nav.html\n│    │    └─ structure.html\n│    ├─ custom_theme.html\n│    ├─ data.js\n│    ├─ deploy.html\n│    ├─ index.html\n│    ├─ install.html\n│    ├─ quick_start.html\n│    ├─ static\n│    │    ├─ .DS_Store\n│    │    ├─ css\n│    │    ├─ font-awesome-4.7.0\n│    │    ├─ fonts\n│    │    ├─ images\n│    │    └─ js\n│    └─ template_markdown.html\n├─ docs # This is the directory of the default markdown document.\n│    ├─ config\n│    │    ├─ main.md\n│    │    ├─ nav.md\n│    │    └─ structure.md\n│    ├─ custom_theme.md\n│    ├─ deploy.md\n│    ├─ index.md\n│    ├─ install.md\n│    ├─ quick_start.md\n│    └─ template_markdown.md\n├─ static # This is a static file directory, After the document is generated, it will becopied to the generated static file directory.\n|\n├─ teadocs.config.js # This is the main configuration file for teadocs\n└─ tree.html # This is the document&#039;s menu configuration file</code></pre></body></html>"},{"context":[{"title":"配置介绍","link":"javascript:void(0)"},{"title":"主配置文件说明","link":"/config/main.html"}],"content":"<html><head></head><body><h1 id=\"主配置文件说明\"><a href=\"#主配置文件说明\" class=\"header-anchor\">#</a>主配置文件说明</h1>\n<p><code>teadocs.config.js</code> it is a Js file, like this:</p>\n<pre><code class=\"language-javascript\">&#039;use strict&#039;;\nconst path = require(&#039;path&#039;)\n\nmodule.exports = {\n    doc: {\n        name: &quot;&quot;, // of your document\n        description: &quot;&quot;, // of your description\n        version: &quot;&quot;, // of your version\n        dir: &quot;&quot;, // the directory representing your document, which defaults to ./docs\n        outDir: &quot;&quot;, //the generated directory representing your document, which defaults to ./build\n        staticDir: &quot;&quot; //this directory that represents your static resource, which defaults to ./static\n    }, \n    theme: {\n        dir: &quot;&quot;, // Fill in this if you have a custom theme file, otherwise leave it blank.\n        title: &quot;&quot;, //site title.\n        headHtml: &quot;&quot;, // stie head with html.\n        footHtml: &quot;&quot;, // site footer with html.\n        isMinify: true // Wheter to compress your document.\n    },\n    nav: {\n        tree: &quot;./tree.html&quot; //the path of your menu&#039;s configuration file.\n    }\n}</code></pre>\n</body></html>"},{"context":[{"title":"配置介绍","link":"javascript:void(0)"},{"title":"菜单配置文件说明","link":"/config/nav.html"}],"content":"<html><head></head><body><h1 id=\"菜单配置文件说明\"><a href=\"#菜单配置文件说明\" class=\"header-anchor\">#</a>菜单配置文件说明</h1>\n<p>The menu configuration file is located in the root of the <code>tree.html</code>.</p>\n<h2 id=\"complete-menu\"><a href=\"#complete-menu\" class=\"header-anchor\">#</a>complete menu</h2>\n<p>A complete structure is as follows:</p>\n<pre><code class=\"language-html\">&lt;ul&gt;\n    &lt;li&gt;&lt;a href=&quot;/index&quot;&gt;介绍&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;/quick_start&quot;&gt;快速入门&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;/install&quot;&gt;安装&lt;/a&gt;&lt;/li&gt;&lt;li&gt;\n    &lt;/li&gt;&lt;li&gt;\n        &lt;a&gt;配置介绍&lt;/a&gt;\n        &lt;ul data-show=&quot;1&quot;&gt;\n            &lt;li&gt;&lt;a href=&quot;/config/structure&quot;&gt;文档目录结构介绍&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=&quot;/config/main&quot;&gt;主配置文件说明&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=&quot;/config/nav&quot;&gt;菜单配置文件说明&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;/template_markdown&quot;&gt;markdown模版&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;/custom_theme&quot;&gt;自定义主题&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;/deploy&quot;&gt;部署&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;</code></pre>\n<h3 id=\"ul\"><a href=\"#ul\" class=\"header-anchor\">#</a>ul</h3>\n<p>tag ul will packgae li</p>\n<h3 id=\"li\"><a href=\"#li\" class=\"header-anchor\">#</a>li</h3>\n<p>tag li will packge ul</p>\n<h3 id=\"href\"><a href=\"#href\" class=\"header-anchor\">#</a>href</h3>\n<p>The href attribute represents the path ot the document.</p>\n<h3 id=\"data-show\"><a href=\"#data-show\" class=\"header-anchor\">#</a>data-show</h3>\n<p>This property determines whether to expand your menu at the beginning.</p>\n<p>expand:</p>\n<pre><code>data-show=&quot;1&quot;</code></pre><p>collapse:</p>\n<pre><code>data-show=&quot;0&quot;</code></pre></body></html>"},{"context":[{"title":"markdown模版","link":"/template_markdown.html"}],"content":"<html><head></head><body><h1 id=\"markdown模版\"><a href=\"#markdown模版\" class=\"header-anchor\">#</a>markdown模版</h1>\n<p>你编写的markdown文件可以使用内置的ejs模版引擎，比如我们可以轻而易举的写个循环，像这样：</p>\n<pre><code class=\"language-javascript\">&lt;% [1,2,3,4].forEach(function () { %&gt;    \n### 欢迎使用Teadocs文档生成工具\n&lt;% }) %&gt;</code></pre>\n<p>效果：</p>\n<h3 id=\"欢迎使用Teadocs文档生成工具\"><a href=\"#欢迎使用Teadocs文档生成工具\" class=\"header-anchor\">#</a>欢迎使用Teadocs文档生成工具</h3>\n<h3 id=\"欢迎使用Teadocs文档生成工具\"><a href=\"#欢迎使用Teadocs文档生成工具\" class=\"header-anchor\">#</a>欢迎使用Teadocs文档生成工具</h3>\n<h3 id=\"欢迎使用Teadocs文档生成工具\"><a href=\"#欢迎使用Teadocs文档生成工具\" class=\"header-anchor\">#</a>欢迎使用Teadocs文档生成工具</h3>\n<h3 id=\"欢迎使用Teadocs文档生成工具\"><a href=\"#欢迎使用Teadocs文档生成工具\" class=\"header-anchor\">#</a>欢迎使用Teadocs文档生成工具</h3>\n</body></html>"},{"context":[{"title":"自定义主题","link":"/custom_theme.html"}],"content":"<html><head></head><body><h1 id=\"自定义主题\"><a href=\"#自定义主题\" class=\"header-anchor\">#</a>自定义主题</h1>\n<p>你可以构建自己的主题文件，只要符合Teadocs的主题规范，具体可以自行参考默认主题。</p>\n<h2 id=\"如何使用自己构建的主题？\"><a href=\"#如何使用自己构建的主题？\" class=\"header-anchor\">#</a>如何使用自己构建的主题？</h2>\n<p>在 teadocs.config.js 文件的 theme.dir 配置项中指定你的自定义主题路径就可以了。</p>\n</body></html>"},{"context":[{"title":"部署","link":"/deploy.html"}],"content":"<html><head></head><body><h1 id=\"部署\"><a href=\"#部署\" class=\"header-anchor\">#</a>部署</h1>\n<p>可以上传到github上，使用 .gitignore 屏蔽 ./build 目录。</p>\n<p>建议使用nginx搭建一个静态服务器进行访问。</p>\n</body></html>"}];var randStr=function(){return Math.random().toString(36).substr(2);};var findTitle=function(ele){var findPrevs=function(ele){var children=$(ele).parent().children();var prevs=[];var findIt=false;children=Array.prototype.slice.call(children);children.forEach(function(subEle){if($(subEle).is($(ele))){findIt=true;}if(findIt===false&&$(subEle).text()!=""){prevs.push(subEle);}});return prevs;};var findH=function(eles){var _eles=Array.prototype.slice.call(eles);_eles.reverse();var title="";var id="";_eles.forEach(function(item){if(!title){if(item.nodeName[0]==="H"){title=$(item).text();id=$(item).attr("id");}}});return{text:title,id:id};};var prevs=findPrevs(ele);if(prevs.length){return findH(prevs);}};window.searchData=function(keyword){var searchResult=[];content.forEach(function(item){var tempHtml="<div id='"+randStr()+"'></div>";var tempEle=$(tempHtml);var findArray=[];tempEle.html(item.content);findArray=tempEle.find(":contains('"+keyword+"')");findArray=Array.prototype.slice.call(findArray);if(findArray.length){findArray.forEach(function(ele){var findContent=$(ele).text();findContent=findContent[0]==="<"?$(findContent).text():findContent;findContent=findContent.replace(new RegExp(keyword,'g'),"<b>"+keyword+"</b>");var hObj=findTitle(ele);if(hObj){searchResult.push({context:item.context,title:hObj.text,hid:hObj.id,findContent:findContent});}});}});return searchResult;};})();